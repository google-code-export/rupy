#summary How to send slow/async/chunked responses with rupy.
#labels Phase-Implementation

This example runs indefinitely.

{{{
public class Async extends Service {
	public String path() { return "/async"; }
	public void filter(Event event) throws Event, Exception {
		Output out = event.output();

		if(event.push()) {
			out.println(event.query().string("done"));
			// call this when you are completely done
			// event.output().finish();
			out.flush();
		}
		else {
			event.hold();
			start(event);

			out.println("Async response started!");
			out.flush();
		}
	}

	private void start(final Event event) {
		new Thread(new Runnable() {
			public void run() {
				try {
					int state = Reply.OK;
                    	
					while(state == Reply.OK) {
						// do something asynchronously
						Thread.currentThread().sleep(100);
						event.query().put("done", "data to send back");
						state = event.reply().wakeup();
					}
				}
				catch(Exception e) {
					e.printStackTrace();
				}
			}
		}).start();
	}
}
}}}