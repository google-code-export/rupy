#summary How to send async/chunked responses with rupy.
#labels Phase-Implementation

{{{
public static class Async extends Service {
	public String path() { return "/async"; }
	public void filter(Event event) throws Event, Exception {
		Output out = event.output();

		if(event.push()) {
			out.println(event.query().string("done"));
			// call this when you are completely done
			// event.output().finish();
			out.flush();
		}
		else {
			event.hold();

			start(event); // this is an example, the method will lock for separate requests, you need some kind of async executor here.

			out.println("Async request started!");
			out.flush();
		}
	}

	private void start(final Event event) {
		new Thread(new Runnable() {
			public void run() {
				while(true) {
					// do something asynchronously
					event.query().put("done", "data to send back");
					event.reply().wakeup();
				}
			}
		}).start();
	}
}
}}}