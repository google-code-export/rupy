#summary How to stream chunks asynchronously.
#labels Featured,Phase-Implementation

You can now [http://rupy.googlecode.com/files/talk-0.9.1.zip stream] messages over HTTP with rupy.

The message performance of the above test implementation:<br>
           
||CPU (s)||usage||in/s||out/s||total/s||
||3770S (4)||0%||~4.000||~9.000||~13.000||
||D510MO (2)||80-120%||~3.000||~6.000||~9.000||
||RPi (1)||99%||~300||~700||~1.000||

You can try it quickly by right-clicking these two links and open them in new tabs: [http://host.rupy.se/pull?name=one one] [http://host.rupy.se/push?name=two&message=hello two]

You will then send hello from one tab to the other.

This code allows you to receive dynamic chunks with flash:

{{{
package {
    import flash.errors.*;
    import flash.events.*;
    import flash.net.URLRequest;
    import flash.net.URLStream;

    public class Comet {
        private var stream:URLStream;
        private var offset:int = 0;

        /*
         * Call /ping?name=XXX here.
         */
        public function Comet(url:String) {
            stream = new URLStream();
            var request:URLRequest = new URLRequest(url);
            stream.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            try {
                stream.load(request);
            } catch (error:Error) {
                trace("Unable to load requested URL.");
            }
        }

        private function progressHandler(event:Event):void {
            var progress:ProgressEvent = ProgressEvent(event);
            var message:String = stream.readUTFBytes(progress.bytesLoaded - offset);
            offset = progress.bytesLoaded;
            trace(message);
        }
    }
}
}}}